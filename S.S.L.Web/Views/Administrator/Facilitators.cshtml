@using S.S.L.Web.Infrastructure.Extensions;
@using S.S.L.Domain.Enums;
@model FacilitatorsViewModel
@{
    ViewBag.Title = "Facilitators";
    ViewBag.Heading = "Facilitators";
    ViewBag.SubHeading = "Manage Facilitators";
    var rowCount = 1;
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}


<div class="col-lg-9 mt-3 animated fadeIn">

    @{
        Html.RenderPartial("_Alerts");
    }
    <div class="container-fluid bg-light p-2 shadow">
        <div class="row mb-3">
            <div class="col-lg-3">
                <button type="button" class="btn-sm btn-outline-gold mr-2" data-toggle="modal" data-target="#facilitatorModal">
                    <i class="fa fa-plus fa-fw"></i>
                </button>
                <span class="text-gold">Add New Facilitator</span>
            </div>
        </div>
        @if (Model.Facilitators.Any())
        {

            <table class="table table-hover table-bordered table-responsive-sm" id="users">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Role</th>


                        @if (User.IsAdmin())
                        {
                            <th scope="col">Gym Group</th>
                            <th scope="col">Manage</th>
                        }

                    </tr>
                </thead>
                <tbody>
                    @foreach (var facilitator in Model.Facilitators)
                    {
                        <tr>
                            <th scope="row">@rowCount</th>
                            <td>@facilitator.FirstName</td>
                            <td>@facilitator.LastName</td>
                            <td><a href="mailto:@facilitator.Email" class="text-muted text-capitalize">@facilitator.Email</a></td>
                            <td class="js-change">
                                @if (facilitator.HasRole(nameof(UserType.Administrator)))
                                {
                                    <span class="badge badge-dark shadow p-1 mr-1">Administrator</span>

                                }
                                else
                                {
                                    <span class="badge badge-light shadow p-1 mr-1">Facilitator</span>

                                }
                            </td>
                            @if (User.IsAdmin())
                            {
                                <td>
                                    @if (facilitator.HasGymGroup())
                                    {
                                        <span class="badge badge-dark p-1">@facilitator.GymGroup.GetDescription()</span>
                                    }
                                    else
                                    {
                                        <a href="#" class="badge badge-info p-1 js-assign-gym" data-toggle="modal" data-target="#assignModal" data-id="@facilitator.Id">Assign GymGroup</a>

                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("userprofile","facilitator", new { userId = facilitator.Id})" class="badge badge-secondary shadow p-1 mr-1" title="view profile">
                                        View
                                    </a>


                                    @if (!facilitator.HasRole(nameof(UserType.Administrator)))
                                    {
                                        <a href="#" class="badge badge-warning shadow p-1 js-change-role mr-3" data-id="@facilitator.Id">Make Admin</a>

                                    }
                                    <a href="#" class="badge badge-danger shadow p-1 mr-1 js-delete-user" title="delete" data-id="@facilitator.Id">
                                        <i class="fa fa-lg fa-trash"></i>
                                    </a>

                                </td>
                            }
                        </tr>
                        rowCount++;
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-light h-50 shadow">
                <p class="text-center text-success">There are currently no Facilitators.</p>

            </div>

        }

    </div>
</div>
<!--Add facilitator Modal -->
<div class="modal fade" id="facilitatorModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content form-back">
            <div class="modal-header border-gold">
                <h5 class="modal-title text-gold text-center ml-3" id="exampleModalCenterTitle"><i class="fa fa-user fa-lg mr-3"></i>New Facilitator</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm())
            {

                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label class="text-default">Fist Name</label>
                                @Html.EditorFor(model => model.FirstName, new
                                {
                                    htmlAttributes = new { @class = "form-control", placeholder = "First Name" }
                                })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger text-sm" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label class="text-default">Last Name</label>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger text-sm" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label class="text-default">Email</label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger text-sm " })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label class="text-default">Gender</label>

                            </div>
                            <div class="form-group col-md-3">

                                <div class="custom-control custom-radio">
                                    <input id="female" name="@nameof(Model.Gender)" value="Female" class="custom-control-input" type="radio" checked>
                                    <label class="custom-control-label" for="female">Female</label>
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                <div class="custom-control custom-radio">
                                    <input id="male" name="@nameof(Model.Gender)" value="Male" class="custom-control-input" type="radio">
                                    <label class="custom-control-label" for="male">Male</label>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger text-sm" })
                        </div>

                        @if (User.Identity.IsSuperAdmin())
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(model => model.MakeAdmin, new { @class = "custom-control-input" })
                                        @Html.LabelFor(model => model.MakeAdmin, htmlAttributes: new { @class = "custom-control-label text-default", id = nameof(Model.MakeAdmin) })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="modal-footer border-gold">
                    <button type="submit" class="btn-sm btn-outline-gold" id="create">Create Account</button>
                </div>

            }


        </div>
    </div>
</div>
<!--Gym group assignment modal-->
<div class="modal fade" id="assignModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content bg-light">
            <div class="modal-header">
                <h5 class="modal-title text-gold text-center ml-3" id="exampleModalCenterTitle"><i class="fa fa-pencil fa-lg mr-3"></i>Assign GymGroup</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="end">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form>
                @Html.HiddenFor(model => model.UserId, htmlAttributes: new { id = "id" })
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row" id="json-result">
                            <div class="col-md-12">
                                <div class="alert alert-success shadow">
                                    <span class="text-sm text-center text-muted form-text">Gym Group Assigned</span>
                                </div>
                            </div>
                        </div>
                        <div class="row shadow mb-3">

                            <div class="col-md-12 p-3">
                                <p class="text-default mb-0">Name</p>
                                <h6 class="text-muted mb-3" id="username"></h6>

                                <p class="text-default mb-0">Gender</p>
                                <h6 class="text-muted mb-3" id="user-gender"></h6>

                            </div>

                        </div>

                        <div class="row shadow">
                            <div class="col-md-12 p-2">
                                @Html.EnumDropDownListFor(model => model.GymGroup, "SELECT GYM GROUP", htmlAttributes: new { @class = "form-control text-sm p-2", id = "group" })

                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer border-gold">
                    <button type="submit" class="btn-sm btn-outline-gold" id="create">Assign</button>
                </div>

            </form>


        </div>
    </div>
</div>

<link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.css" rel="stylesheet" />
@section Scripts{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/bootbox.min.js"></script>
    <script src="~/Scripts/app/user-table.js"></script>

}
