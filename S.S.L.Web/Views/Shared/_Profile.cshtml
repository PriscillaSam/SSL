@model UserModel
@using S.S.L.Web.Infrastructure.Extensions
@using Microsoft.AspNet.Identity;

<div class="col-lg-12 bg-light p-4">
    <div class="row shadow animated fadeIn">
        <div class="col-md-4 p-2">
            <img src="~/Assets/img/03.jpg" alt="Profile Picture" class="img-fluid" />
        </div>

        <div class="col-md-4 bg-dark p-2">
            <div class="col-md-12 mt-3">
                <i class="fa fa-user fa-2x text-info"></i>
                <p class="text-muted text-sm">@Model.FullName</p>
            </div>
            <div class="col-md-12">
                <i class="fa fa-envelope fa-2x text-info"></i>
                <p class="text-muted text-sm text-capitalize">@Model.Email</p>
            </div>

            <div class="col-md-12">
                <i class="fa fa-tags fa-2x text-info"></i>
                <p class="text-muted text-sm">@Model.UserType.ToString()</p>
            </div>
        </div>

        <div class="col-md-4 bg-white p-2">
            @if (Model.Gender != null)
            {
                <div class="col-md-12 mt-3">
                    @if (Model.Gender == "Male")
                    {
                        <i class="fa fa-male fa-2x text-muted"></i>
                    }
                    else
                    {
                        <i class="fa fa-female fa-2x text-muted"></i>

                    }
                    <p class="text-info  text-sm">@Model.Gender</p>
                </div>
            }

            @if (Model.MobileNumber != null)
            {
                <div class="col-md-12">
                    <i class="fa fa-phone fa-2x text-muted"></i>
                    <p class="text-info text-sm">@Model.MobileNumber</p>
                </div>
                <div class="col-md-12">
                    <i class="fa fa-map-marker fa-2x text-muted"></i>
                    <p class="text-info text-sm">@Model.State, @Model.Country</p>
                </div>
            }
        </div>

    </div>

</div>

@if (User.Identity.GetUserId() == Model.Id.ToString())
{
    <div class="modal fade" id="userModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content form-back">
                <div class="modal-header border-gold">
                    <h5 class="modal-title text-gold text-center ml-3" id="exampleModalCenterTitle"><i class="fa fa-edit fa-lg mr-3"></i>Edit Profile</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("userprofile", User.Identity.GetUserType()))
                {

                    <div class="modal-body">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <label class="text-default">Fist Name</label>
                                    @Html.EditorFor(model => model.FirstName, new
                                    {
                                        htmlAttributes = new { @class = "form-control", placeholder = "First Name" }
                                    })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger text-sm" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <label class="text-default">Last Name</label>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger text-sm" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <label class="text-default">Mobile Number</label>
                                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Mobile Number" } })
                                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger text-sm " })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <label class="text-default">Country</label>
                                    @Html.DropDownListFor(model => model.Country, (SelectList)ViewBag.Countries, "-Select your country-", new { @class = "custom-select" })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger text-sm " })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <label class="text-default">State</label>
                                    @Html.DropDownListFor(model => model.State, (SelectList)ViewBag.States, "-Select your state-", new { @class = "custom-select" })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger text-sm " })
                                </div>
                            </div>


                        </div>
                    </div>

                    <div class="modal-footer border-gold">
                        <button type="submit" class="btn-sm btn-outline-gold" id="create">Update Profile</button>
                    </div>

                }


            </div>
        </div>
    </div>
}





